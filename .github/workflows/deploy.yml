name: deploy

on:
  push:
    branches:
      - develop

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    environment: github-pages
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci --prefer-offline --no-audit

      - name: Build dashboard
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_FRONTEND_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-session-name: DeployFrontendFeature

      - name: Copy files to the website with the AWS CLI
        run: |
          aws s3 sync ./dist s3://skoll.com.co

      - name: Invalidate Cache Cloudfront
        run: |
          output=$(aws cloudfront create-invalidation --distribution-id E39LH3XFYQ99JY --paths "/*") 
          invalidation_id=$(echo $output | jq -r '.Invalidation.Id')
          aws cloudfront wait invalidation-completed --distribution-id E39LH3XFYQ99JY --id $invalidation_id